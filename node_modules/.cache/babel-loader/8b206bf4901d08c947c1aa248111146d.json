{"ast":null,"code":"/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = _ref => {\n  let {\n    strings = ['Put your strings here...', 'and Enjoy!'],\n    typeSpeed = 100,\n    backSpeed = 50,\n    backDelay = 500,\n    startDelay = 500,\n    cursorChar = '|',\n    placeholder = false,\n    showCursor = true,\n    disableBackTyping = false,\n    onFinished = function () {},\n    loop = true\n  } = _ref;\n  return {\n    strings,\n    typeSpeed,\n    backSpeed,\n    cursorChar,\n    backDelay,\n    placeholder,\n    startDelay,\n    showCursor,\n    loop,\n    disableBackTyping,\n    onFinished\n  };\n};\n\nexport const init = (element, properties) => {\n  let i = 0,\n      l,\n      STRINGS_TO_ITERATE;\n\n  const typewrite = (strings, props) => {\n    if (i === l) if (props.loop) i = 0;\n    setTimeout(() => {\n      typeString(strings[i], props);\n    }, props.startDelay);\n  };\n\n  const typeString = (str, props) => {\n    let index = 0,\n        strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  };\n\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished();\n    }\n\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n\n    setTimeout(() => eraseString(props), props.backDelay);\n  };\n\n  const eraseString = props => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n        strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder = element.placeholder.substr(0, --strLen) : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  };\n\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  };\n\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  };\n\n  const startTyping = prop => {\n    let props = setProps(prop || {});\n    let strings = props.strings;\n    STRINGS_TO_ITERATE = strings;\n    l = strings.length;\n    if (typeof element === \"string\") element = document.querySelector(element);\n    if (props.showCursor) setCursor(element, props);\n    typewrite(strings, props);\n  };\n\n  return startTyping(properties);\n};","map":{"version":3,"names":["setProps","strings","typeSpeed","backSpeed","backDelay","startDelay","cursorChar","placeholder","showCursor","disableBackTyping","onFinished","loop","init","element","properties","i","l","STRINGS_TO_ITERATE","typewrite","props","setTimeout","typeString","str","index","strLen","length","intervalID","setInterval","textContent","onStringTyped","id","clearInterval","eraseString","substr","onStringErased","setCursor","cursorSpan","document","createElement","classList","add","insertAdjacentElement","startTyping","prop","querySelector"],"sources":["/Users/waylo/dev/projects/Adrianne/node_modules/ityped/src/index.js"],"sourcesContent":["/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nconst setProps = ({\n  strings = ['Put your strings here...', 'and Enjoy!'],\n  typeSpeed = 100,\n  backSpeed = 50,\n  backDelay = 500,\n  startDelay = 500,\n  cursorChar = '|',\n  placeholder = false,\n  showCursor = true,\n  disableBackTyping = false,\n  onFinished = function () { },\n  loop = true\n}) => ({\n  strings,\n  typeSpeed,\n  backSpeed,\n  cursorChar,\n  backDelay,\n  placeholder,\n  startDelay,\n  showCursor,\n  loop,\n  disableBackTyping,\n  onFinished\n})\n\nexport const init = (element, properties) => {\n  let i = 0, l, STRINGS_TO_ITERATE;\n\n  const typewrite = (strings, props) => {\n    if (i === l)\n      if (props.loop) i = 0;\n    setTimeout(() => { typeString(strings[i], props); }, props.startDelay);\n  }\n\n  const typeString = (str, props) => {\n    let index = 0,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder ? element.placeholder += str[index] : element.textContent += str[index];\n      if (++index === strLen) return onStringTyped(intervalID, props);\n    }, props.typeSpeed);\n  }\n\n  const onStringTyped = (id, props) => {\n    clearInterval(id);\n    if (props.disableBackTyping && i === l - 1) {\n      return props.onFinished()\n    }\n    if (!props.loop && i === l - 1) {\n      return props.onFinished();\n    }\n    setTimeout(() => eraseString(props), props.backDelay);\n  }\n\n  const eraseString = (props) => {\n    let str = props.placeholder ? element.placeholder : element.textContent,\n      strLen = str.length;\n    let intervalID = setInterval(() => {\n      props.placeholder\n        ? element.placeholder = element.placeholder.substr(0, --strLen)\n        : element.textContent = str.substr(0, --strLen);\n      if (strLen === 0) return onStringErased(intervalID, props);\n    }, props.backSpeed);\n  }\n\n  const onStringErased = (id, props) => {\n    clearInterval(id);\n    ++i;\n    typewrite(STRINGS_TO_ITERATE, props);\n  }\n\n  const setCursor = (element, props) => {\n    let cursorSpan = document.createElement('span');\n    cursorSpan.classList.add('ityped-cursor');\n    cursorSpan.textContent = '|';\n    cursorSpan.textContent = props.cursorChar;\n    element.insertAdjacentElement('afterend', cursorSpan);\n  }\n\n\n  const startTyping = (prop) => {\n    let props = setProps(prop || {})\n    let strings = props.strings\n    STRINGS_TO_ITERATE = strings\n    l = strings.length\n    if (typeof element === \"string\") element = document.querySelector(element)\n    if (props.showCursor) setCursor(element, props)\n    typewrite(strings, props)\n  }\n\n  return startTyping(properties)\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG;EAAA,IAAC;IAChBC,OAAO,GAAG,CAAC,0BAAD,EAA6B,YAA7B,CADM;IAEhBC,SAAS,GAAG,GAFI;IAGhBC,SAAS,GAAG,EAHI;IAIhBC,SAAS,GAAG,GAJI;IAKhBC,UAAU,GAAG,GALG;IAMhBC,UAAU,GAAG,GANG;IAOhBC,WAAW,GAAG,KAPE;IAQhBC,UAAU,GAAG,IARG;IAShBC,iBAAiB,GAAG,KATJ;IAUhBC,UAAU,GAAG,YAAY,CAAG,CAVZ;IAWhBC,IAAI,GAAG;EAXS,CAAD;EAAA,OAYV;IACLV,OADK;IAELC,SAFK;IAGLC,SAHK;IAILG,UAJK;IAKLF,SALK;IAMLG,WANK;IAOLF,UAPK;IAQLG,UARK;IASLG,IATK;IAULF,iBAVK;IAWLC;EAXK,CAZU;AAAA,CAAjB;;AA0BA,OAAO,MAAME,IAAI,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyB;EAC3C,IAAIC,CAAC,GAAG,CAAR;EAAA,IAAWC,CAAX;EAAA,IAAcC,kBAAd;;EAEA,MAAMC,SAAS,GAAG,CAACjB,OAAD,EAAUkB,KAAV,KAAoB;IACpC,IAAIJ,CAAC,KAAKC,CAAV,EACE,IAAIG,KAAK,CAACR,IAAV,EAAgBI,CAAC,GAAG,CAAJ;IAClBK,UAAU,CAAC,MAAM;MAAEC,UAAU,CAACpB,OAAO,CAACc,CAAD,CAAR,EAAaI,KAAb,CAAV;IAAgC,CAAzC,EAA2CA,KAAK,CAACd,UAAjD,CAAV;EACD,CAJD;;EAMA,MAAMgB,UAAU,GAAG,CAACC,GAAD,EAAMH,KAAN,KAAgB;IACjC,IAAII,KAAK,GAAG,CAAZ;IAAA,IACEC,MAAM,GAAGF,GAAG,CAACG,MADf;IAEA,IAAIC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCR,KAAK,CAACZ,WAAN,GAAoBM,OAAO,CAACN,WAAR,IAAuBe,GAAG,CAACC,KAAD,CAA9C,GAAwDV,OAAO,CAACe,WAAR,IAAuBN,GAAG,CAACC,KAAD,CAAlF;MACA,IAAI,EAAEA,KAAF,KAAYC,MAAhB,EAAwB,OAAOK,aAAa,CAACH,UAAD,EAAaP,KAAb,CAApB;IACzB,CAH2B,EAGzBA,KAAK,CAACjB,SAHmB,CAA5B;EAID,CAPD;;EASA,MAAM2B,aAAa,GAAG,CAACC,EAAD,EAAKX,KAAL,KAAe;IACnCY,aAAa,CAACD,EAAD,CAAb;;IACA,IAAIX,KAAK,CAACV,iBAAN,IAA2BM,CAAC,KAAKC,CAAC,GAAG,CAAzC,EAA4C;MAC1C,OAAOG,KAAK,CAACT,UAAN,EAAP;IACD;;IACD,IAAI,CAACS,KAAK,CAACR,IAAP,IAAeI,CAAC,KAAKC,CAAC,GAAG,CAA7B,EAAgC;MAC9B,OAAOG,KAAK,CAACT,UAAN,EAAP;IACD;;IACDU,UAAU,CAAC,MAAMY,WAAW,CAACb,KAAD,CAAlB,EAA2BA,KAAK,CAACf,SAAjC,CAAV;EACD,CATD;;EAWA,MAAM4B,WAAW,GAAIb,KAAD,IAAW;IAC7B,IAAIG,GAAG,GAAGH,KAAK,CAACZ,WAAN,GAAoBM,OAAO,CAACN,WAA5B,GAA0CM,OAAO,CAACe,WAA5D;IAAA,IACEJ,MAAM,GAAGF,GAAG,CAACG,MADf;IAEA,IAAIC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCR,KAAK,CAACZ,WAAN,GACIM,OAAO,CAACN,WAAR,GAAsBM,OAAO,CAACN,WAAR,CAAoB0B,MAApB,CAA2B,CAA3B,EAA8B,EAAET,MAAhC,CAD1B,GAEIX,OAAO,CAACe,WAAR,GAAsBN,GAAG,CAACW,MAAJ,CAAW,CAAX,EAAc,EAAET,MAAhB,CAF1B;MAGA,IAAIA,MAAM,KAAK,CAAf,EAAkB,OAAOU,cAAc,CAACR,UAAD,EAAaP,KAAb,CAArB;IACnB,CAL2B,EAKzBA,KAAK,CAAChB,SALmB,CAA5B;EAMD,CATD;;EAWA,MAAM+B,cAAc,GAAG,CAACJ,EAAD,EAAKX,KAAL,KAAe;IACpCY,aAAa,CAACD,EAAD,CAAb;IACA,EAAEf,CAAF;IACAG,SAAS,CAACD,kBAAD,EAAqBE,KAArB,CAAT;EACD,CAJD;;EAMA,MAAMgB,SAAS,GAAG,CAACtB,OAAD,EAAUM,KAAV,KAAoB;IACpC,IAAIiB,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAjB;IACAF,UAAU,CAACG,SAAX,CAAqBC,GAArB,CAAyB,eAAzB;IACAJ,UAAU,CAACR,WAAX,GAAyB,GAAzB;IACAQ,UAAU,CAACR,WAAX,GAAyBT,KAAK,CAACb,UAA/B;IACAO,OAAO,CAAC4B,qBAAR,CAA8B,UAA9B,EAA0CL,UAA1C;EACD,CAND;;EASA,MAAMM,WAAW,GAAIC,IAAD,IAAU;IAC5B,IAAIxB,KAAK,GAAGnB,QAAQ,CAAC2C,IAAI,IAAI,EAAT,CAApB;IACA,IAAI1C,OAAO,GAAGkB,KAAK,CAAClB,OAApB;IACAgB,kBAAkB,GAAGhB,OAArB;IACAe,CAAC,GAAGf,OAAO,CAACwB,MAAZ;IACA,IAAI,OAAOZ,OAAP,KAAmB,QAAvB,EAAiCA,OAAO,GAAGwB,QAAQ,CAACO,aAAT,CAAuB/B,OAAvB,CAAV;IACjC,IAAIM,KAAK,CAACX,UAAV,EAAsB2B,SAAS,CAACtB,OAAD,EAAUM,KAAV,CAAT;IACtBD,SAAS,CAACjB,OAAD,EAAUkB,KAAV,CAAT;EACD,CARD;;EAUA,OAAOuB,WAAW,CAAC5B,UAAD,CAAlB;AACD,CAlEM"},"metadata":{},"sourceType":"module"}